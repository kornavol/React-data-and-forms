{"version":3,"sources":["assets/userLogo-2.png","components/SignIn.jsx","components/SignUp.jsx","pages/Auth.jsx","components/Card.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","msg","setMsg","inputTypePasswd","setInputTypePasswd","className","id","onClick","toggle","src","userLogo","alt","onSubmit","e","preventDefault","data","email","target","value","pass","options","method","headers","body","JSON","stringify","fetch","then","result","json","output","status","statusChecker","message","type","name","placeholder","defaultValue","href","SignUp","console","log","firstName","secondName","setTimeout","Authorization","condition","setstate","state","Card","img","App","option","setCountryList","map","item","flag","countryList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc27c95c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userLogo-2.68a25c62.png\";","import './Login.css'\r\nimport userLogo from '../assets/userLogo-2.png'\r\n\r\nimport {useState} from 'react';\r\n\r\nexport default function Login(props) {\r\n\r\n       \r\n    const [msg, setMsg] = useState('')\r\n   \r\n\r\n    /* Find a button over Event. The target is an id of button. We don't use a name or value because they can be changed f.e. translator  */\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = {};\r\n\r\n        data.email = e.target[0].value;\r\n        data.pass = e.target[1].value;\r\n\r\n        //console.log(e.target);\r\n        let url = \"https://auth404.herokuapp.com/api/auth/login\";\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n\r\n        fetch(url, options).then(result => result.json().then(output => {\r\n            let status = output.status;\r\n            /* for send stats to App.js  */\r\n            props.statusChecker(status);\r\n            /* show a warning */\r\n            if (status == 'failed') {\r\n                /* This structure kinda reset a text for show aan animation */\r\n                setMsg('')\r\n                /* assign element instead just massage_, because wanna reveal text with animation  */\r\n                setMsg(<h4 className=\"fadeIn color-yellow\">{output.message}</h4>)\r\n            }\r\n        }));       \r\n    }\r\n\r\n    const [inputTypePasswd, setInputTypePasswd] = useState(['password', 'show', 'show-btn-show'])\r\n\r\n    function showPass(e) {\r\n        e.preventDefault;\r\n\r\n        if (e.target.id === 'show-btn-show') {\r\n            setInputTypePasswd(['text', 'hide', 'show-btn-hide']);\r\n\r\n        } else if (e.target.id === 'show-btn-hide') {\r\n            setInputTypePasswd(['password', 'show', 'show-btn-show']);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper fadeInDown\">\r\n            {/* <h4 className=\"fadeIn fourth\">{msg}</h4> */}\r\n            {msg}\r\n            <div id=\"formContent\">\r\n\r\n                {/* Tabs Titles */}\r\n                <h2 className=\"active\"> Sign In </h2>\r\n                <h2 onClick={props.toggle} className=\"inactive underlineHover\">Sign Up </h2>\r\n                {/* Icon */}\r\n                <div id='userLogo' className=\"fadeIn first\">\r\n                    <img className=\"userLogo\" src={userLogo} id=\"icon\" alt=\"User Icon\" />\r\n                </div>\r\n                {/* Login Form */}\r\n                <form onSubmit={submitHandler}>\r\n                    {/*  type -= email screw up my outlook */}\r\n                    {/* <input type=\"email\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"login\" /> */}\r\n                    <input type=\"email\" id=\"login\" className=\"fadeIn first\" name=\"login\" placeholder=\"login\" />\r\n                    <div className =\"password\">\r\n                        <input type={inputTypePasswd[0]} id=\"password\" className=\"short-psw fadeIn second\" name=\"login\" placeholder=\"password\" />\r\n                        <input type=\"button\" id={inputTypePasswd[2]} className=\"fadeIn second\" onClick={showPass} name=\"test\" value={inputTypePasswd[1]} />\r\n                    </div>\r\n                    <input id=\"LogIn\" type=\"submit\" className=\"fadeIn third\" defaultValue=\"Log In\" />\r\n                </form>\r\n                {/* Remind Password */}\r\n                <div id=\"formFooter\">\r\n                    <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './Login.css'\r\nimport userLogo from '../assets/userLogo-2.png'\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function SignUp(props) {\r\n    \r\n\r\n    const [msg, setMsg] = useState('')\r\n\r\n    /* Find a button over Event. The target is an id of button. We don't use a name or value because they can be changed f.e. translator  */\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('submitHandler is running');\r\n\r\n        let data = {};\r\n        let firstName = e.target[0].value;\r\n        let secondName = e.target[1].value;\r\n        data.name = `${firstName} ${secondName}`\r\n        data.email = e.target[2].value;\r\n        data.pass = e.target[3].value;\r\n\r\n        let url = \"https://auth404.herokuapp.com/api/auth/register\";\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n\r\n        fetch(url, options).then(result => result.json().then(output => {\r\n            // console.log(output);\r\n            let status = output.status;\r\n            if (status == 'failed') {\r\n                setMsg('')\r\n                /* assign element instead just massage_, because wanna reveal text with animation  */\r\n                setMsg(<h4 className=\"fadeIn color-yellow\">{'this email is already in use. Please try another'}</h4>)\r\n\r\n            } else if (status == 'success') {\r\n                setMsg('')\r\n                /* assign element instead just massage_, because wanna reveal text with animation  */\r\n                setMsg(<h4 className=\"fadeIn color-white\">{output.message}</h4>)\r\n            }\r\n            /* Delay to show a customer a message  */\r\n            setTimeout(() => props.statusChecker(status), 4000);\r\n\r\n        }))\r\n    }\r\n\r\n\r\n    const [inputTypePasswd, setInputTypePasswd] = useState(['password', 'show', 'show-btn-show'])\r\n\r\n    function showPass(e) {\r\n        e.preventDefault;\r\n\r\n        if (e.target.id === 'show-btn-show') {\r\n            setInputTypePasswd(['text', 'hide', 'show-btn-hide']);\r\n\r\n        } else if (e.target.id === 'show-btn-hide') {\r\n            setInputTypePasswd(['password', 'show', 'show-btn-show']);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper fadeInDown\">\r\n            {msg}\r\n            <div id=\"formContent\">\r\n                {/* Tabs Titles */}\r\n                <h2 onClick={props.toggle} className=\"inactive underlineHover\"> Sign In </h2>\r\n                <h2 className=\"active\">Sign Up </h2>\r\n                {/* Icon */}\r\n                <div className=\"fadeIn first \">\r\n                    <img className=\"userLogo\" src={userLogo} id=\"icon\" alt=\"User Icon\" />\r\n                </div>\r\n                {/* Login Form */}\r\n                <form onSubmit={submitHandler}>\r\n                    <input type=\"text\" id=\"first name \" className=\"fadeIn second\" name=\"login\" placeholder=\"first name\" />\r\n                    <input type=\"text\" id=\"last name\" className=\"fadeIn second\" name=\"login\" placeholder=\"last name\" />\r\n                    <input type=\"email\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"login\" />\r\n                    <div className =\"password\">\r\n                        <input type={inputTypePasswd[0]} id=\"password\" className=\"short-psw fadeIn third\" name=\"login\" placeholder=\"password\" />\r\n                        <input type=\"button\" id={inputTypePasswd[2]} className=\"fadeIn third\" onClick={showPass} name=\"test\" value={inputTypePasswd[1]} />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"fadeIn fourth\" defaultValue=\"Sign Up\" />\r\n                </form>\r\n                {/* Remind Password */}\r\n                <div id=\"formFooter\">\r\n                    {/* <a className=\"underlineHover\" href=\"#\">Forgot Password?</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import SignIn from '../components/SignIn.jsx';\r\nimport SignUp from '../components/SignUp.jsx';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function Authorization(props) {\r\n\r\n    let condition = 'SignUp';\r\n    const [state, setstate] = useState(\r\n    <SignIn \r\n    toggle={toggle}\r\n    statusChecker = {props.statusChecker} />)\r\n\r\n    function toggle() {\r\n        if (condition == 'SignUp') {\r\n            setstate(<SignUp \r\n                toggle={toggle}\r\n                statusChecker = {props.statusChecker}\r\n                 />)\r\n            condition = 'SignIn'\r\n        } else if (condition == 'SignIn') {\r\n            setstate(<SignIn \r\n                toggle={toggle}\r\n                statusChecker = {props.statusChecker} />)\r\n            condition = 'SignUp'\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        state\r\n\r\n    );\r\n\r\n\r\n}","import './Card.css'\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className = \"card\">\r\n            <div className = \"flag\">\r\n                <img src={props.img} />\r\n            </div>\r\n            <div>{props.name}</div>\r\n        </div>\r\n    );\r\n    \r\n}","import './App.css';\n\n\nimport Auth from './pages/Auth.jsx'\n\nimport { useState, useEffect } from \"react\";\n// import { axios } from \"axios\";\n\nimport Card from './components/Card.jsx'\n\nfunction App() {\n  let url = \"https://restcountries.eu/rest/v2/all\";\n  let option = {\n    method: \"GET\"\n  };\n\n  /* this variable was created only as checker for 'useEffect'  */\n  let checker = null;\n\n  /* get a status of request check it and if it was success rerender a page  */\n  function statusChecker(status) {\n    checker = status;\n    // console.log('status', status);\n    // console.log('checker', checker);\n\n    if (checker == 'success') {\n      fetch(url, option).then(result => {\n        result.json().then(output => {\n          setCountryList(output.map(item => <Card name={item.name} img={item.flag} />));\n        });\n      });\n    }\n  }\n\n  const [countryList, setCountryList] = useState(<Auth statusChecker={statusChecker} />)\n\n  // useEffect(() => {\n  //   /* rendering all names as elements*/\n  //   console.log('useEffect', checker );\n  //   if (checker == 'success') {\n  //     fetch(url, option).then(result => {\n  //       result.json().then(output => {\n  //         setCountryList(output.map(item => <Card name={item.name} img={item.flag} />));\n  //       });\n  //     });\n  //   }\n  // }, checker)\n\n\n  /* REMINDER. The second .then because .json() return Promise \n  .json() - Parser for JSON date\n  */\n\n  /* UseEffect change the countryList state only once when the component did amount */\n  // useEffect(() => {\n  //   /* rendering all names as elements*/\n  //   fetch(url, option).then(result => {\n  //     result.json().then(output => {\n  //       setCountryList(output.map(item => <Card name = {item.name} img = {item.flag}/>));\n  //     });\n  //   });\n  // }, [])\n\n  return (\n    <div className=\"App App-header\">\n      {countryList}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}